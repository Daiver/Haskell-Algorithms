{-

Руководство финансовой пирамиды решило присвоить числовой рейтинг каждому из участников пирамиды. Если участник до сих пор никого не привел в пирамиду, то его рейтинг равняется 1. Если у участника уже есть подчиненные участники, то его рейтинг равняется 1 + сумма рейтингов его прямых подчиненных.
Задача: найти сумму рейтингов всех участников финансовой пирамиды.

Исходные данные подаются в виде массива из n строк, где каждая строка содержит n символов. Каждый символ — либо '0', либо '1'.
j-й символ i-й строки указывает на то, является ли участник под номером j прямым подчиненным участника i.
j-й символ j-й строки всегда равен '0'. Дерево участников никогда не имеет циклов. Каждый участник всегда является прямым подчиненным максимум одного другого участника. У дерева участников всегда только один корневой участник.

Пример исходных данных:

"0110"
"0000"
"0001"
"0000"


Корневым элементом в данном случае является участник 0. У него двое подчиненных: участники 1 и 2. У 1 подчиненных нет, у 2 есть подчиненный участник 3.
Рейтинг 3-го: 1.
Рейтинг 1-го: 1.
Рейтинг 2-го: 1 + 1 = 2.
Рейтинг 0-го: 1 + 1 + 2 = 4.

Результатом работы кода должна являться сумма рейтингов всех участников, в данном случае это: 1 + 1 + 2 + 4 = 8.

-}

import Data.List

treeData = [
		"0110",
		"0000",
		"0001",
		"0000"
		]

employeeSubs = elemIndices '1'
employees = map employeeSubs treeData

calcEmpl d n = foldr (\x -> (+) (calcEmpl d x)) 1 (d !! n)
calcAll = map (calcEmpl employees) [0..(length employees) - 1]

main = putStrLn . show . sum $ calcAll
